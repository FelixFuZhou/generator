<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>controller</name>
	<filePath>src/main/java/${packageName}/${moduleName}/web/${subModuleName}</filePath>
	<fileName>${ClassName}Controller.java</fileName>
	<content><![CDATA[
package ${packageName}.${moduleName}.web<#if subModuleName != "">.${subModuleName}</#if>;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.arraypay.common.config.Global;
import com.arraypay.common.persistence.Page;
import com.arraypay.common.web.BaseController;
import com.arraypay.common.utils.StringUtils;
import com.arraypay.common.web.JsonResult;
import ${packageName}.${moduleName}.entity<#if subModuleName != "">.${subModuleName}</#if>.${ClassName};
import ${packageName}.${moduleName}.service<#if subModuleName != "">.${subModuleName}</#if>.${ClassName}Service;

/**
 * ${functionName}Controller
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Controller
@RequestMapping(value = "${r"${adminPath}"}/${urlPrefix}")
public class ${ClassName}Controller extends BaseController {

	@Autowired
	private ${ClassName}Service ${className}Service;
	
	@RequiresPermissions("${permissionPrefix}:view")
	@RequestMapping(value = "list")
    public String list(Model model){
       return "${lastPackageName}/${viewPrefix}List";
    }
	
	@RequiresPermissions("${permissionPrefix}:edit")
    @RequestMapping(value = "edit")
    public String edit(Model model){
        return "${lastPackageName}/${viewPrefix}Edit";
    }

    @RequiresPermissions("${permissionPrefix}:view")
    @RequestMapping(value = "view")
    public String view(Model model){
        return "${lastPackageName}/${viewPrefix}View";
    }
	
	@RequiresPermissions("${permissionPrefix}:view")
    @RequestMapping(value = "get")
    @ResponseBody
    public String get(@RequestParam(required=false) String id){
        if (StringUtils.isNotBlank (id)) {
            return JsonResult.JsonSuccess ("查询成功", ${className}Service.get(id));
        } else {
            return JsonResult.JsonSuccess ("查询成功", new ${ClassName}());
        }
    }
	
	@RequiresPermissions("${permissionPrefix}:edit")
    @RequestMapping(value = "save")
    @ResponseBody
    //@DaoLog(description = "{functionName}新增修改保存方法")
    /**
    *日志方法，@DaoLog 添加 表示要生成操作日志
    */
    public String save(${ClassName} ${className},Model model){
        if (Global.isDemoMode ()) { return JsonResult.Jsonfail ("演示模式，不允许操作！"); }
        if (!beanValidator (model, ${className})) { return JsonResult.Jsonfail (model.asMap ().get ("message").toString ()); }
        ${className}Service.save(${className});
        return JsonResult.JsonSuccess ("保存${functionNameSimple}成功");
    }
    
    @RequiresPermissions("${permissionPrefix}:edit")
    @RequestMapping(value = "delete")
    @ResponseBody
    public String delete(${ClassName} ${className}){
        if (Global.isDemoMode ()) { return JsonResult.Jsonfail ("演示模式，不允许操作！"); }
        ${className}Service.delete(${className});
        return JsonResult.JsonSuccess ("删除成功");
    }
	
    @RequiresPermissions("user")
    @ResponseBody
    @RequestMapping(value = "listData")
    /**
    *如果有查询条件 可以单独写，也可以用vo统一封装后传入entity对象
    */
    public String listData(HttpServletRequest request, HttpServletResponse response,Model model){
        ${ClassName} ${className} = new ${ClassName} ();
        Page<${ClassName}> page =  ${className}Service.findPage (new Page<${ClassName}> (request,response), ${className});
        return JsonResult.JsonSuccess ("", page);
    }

}]]>
	</content>
</template>